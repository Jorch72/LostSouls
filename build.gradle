buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://tehnut.info/maven"
        //url "http://mobiusstrip.eu/maven"
    }
    maven { // JEI
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name 'OC Repo'
        url "http://maven.cil.li/"
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven { // McJtyLib
        url "http://maven.k-4u.nl"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

version = "1.12-0.0.1beta"
def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
    version += ".n" + ENV.DRONE_BUILD_NUMBER
}
group= "com.github.mcjty" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "lostsouls"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.12-14.21.0.2373"
    runDir = "run"
    mappings = "snapshot_20170626"
    useDepAts = true
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives sourceJar
    archives deobfJar
}


dependencies {
    deobfCompile "mezz.jei:jei_1.12:4.7.0.67"
    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.10-4"
    deobfCompile "com.github.mcjty:intwheel:1.12-1.2.7"
    deobfCompile "com.github.mcjty:lostcities:1.12-0.0.17beta"
    //deobfCompile "mcp.mobius.waila:Hwyla:1.8.10-B23_1.11:api"
    //deobfCompile "mcjty.theoneprobe:TheOneProbe:1.1x-1.4.7-57"
    //deobfCompile "team.chisel:Chisel:MC1.11.2-0.0.10.14"
    //deobfCompile "com.github.mcjty:compatlayer:1.11.2-0.2.6"
    //deobfCompile "com.github.mcjty:intwheel:1.1x-1.2.6"

    //compile "li.cil.oc:OpenComputers:MC1.7.10-1.5.+:api"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task("uploadJars", dependsOn: "reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description 'LostCities'
                            scm {
                                url 'https://github.com/McJty/LostCities'
                                connection 'scm:git:git@github.com:McJty/LostCities.git'
                                developerConnection 'scm:git:git@github.com:McJty/LostCities.git'
                            }
                            issueManagement {
                                system 'github'
                                url 'https://github.com/McJty/McJtyLib/issues'
                            }
                            licenses {
                                license {
                                    name 'MIT'
                                    distribution 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id 'McJty'
                                    name 'McJty'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
